# Generated by Django 2.1.7 on 2019-03-28 07:56

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=300, verbose_name='Full name of the conference')),
                ('short_name', models.CharField(max_length=30, verbose_name='Short name of the conference')),
                ('year', models.IntegerField(default=2019)),
                ('is_ieee', models.BooleanField(default=False, verbose_name='The conference is supported by IEEE')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True, verbose_name='Country')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('start_date', models.DateField(null=True, verbose_name='Opens at')),
                ('close_date', models.DateField(null=True, verbose_name='Closes at')),
            ],
        ),
        migrations.CreateModel(
            name='ProceedingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Short name')),
                ('description', models.CharField(max_length=1000, verbose_name='Long description')),
                ('final_manuscript_deadline', models.DateField(null=True, verbose_name='Deadline for final manuscript submission')),
                ('final_latex_template', models.FileField(null=True, upload_to='', verbose_name='LaTeX template for final manuscript')),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField(null=True, verbose_name='End of review')),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField(null=True, verbose_name='Deadline for submissions')),
                ('end_date_description', models.CharField(blank=True, max_length=100)),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Short name')),
                ('description', models.CharField(max_length=1000, verbose_name='Long description')),
                ('language', models.TextField(choices=[(None, 'Select submission language'), ('RU', 'Russian'), ('EN', 'English')], max_length=2)),
                ('latex_template', models.FileField(null=True, upload_to='', verbose_name='LaTeX template')),
                ('num_reviews', models.IntegerField(default=2, verbose_name='Number of reviews per submission')),
                ('min_num_pages', models.IntegerField(default=4, verbose_name='Minimum number of pages in submission')),
                ('max_num_pages', models.IntegerField(default=4, verbose_name='Maximum number of pages in submission')),
                ('conference', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference')),
                ('possible_proceedings', models.ManyToManyField(to='conferences.ProceedingType')),
            ],
        ),
    ]
